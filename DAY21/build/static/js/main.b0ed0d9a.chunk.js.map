{"version":3,"sources":["CreateItem.js","ItemsList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateItem","props","useState","itemName","setItemName","calories","setCalories","className","type","name","placeholder","value","onChange","event","target","required","onClick","preventDefault","addItem","Item","item","isInEditMode","setIsInEditMode","useEffect","updateItem","deleteItem","ItemsList","items","length","map","App","setItems","prevName","newName","index","findIndex","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0ed0d9a.chunk.js","sourcesContent":["import './CreateItem.css';\r\nimport {useState} from 'react';\r\n\r\nconst CreateItem = (props) => {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [calories, setCalories] = useState(0);\r\n\r\n    const itemChangeHandler = (event) => {\r\n        setItemName(event.target.value);\r\n    }\r\n\r\n    const caloriesChangeHandler = (event) => {\r\n        setCalories(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className=\"CreateItem\">\r\n            <div className=\"inputs\">\r\n                <input type=\"text\" name=\"item\" placeholder=\"Item name\" value={itemName} onChange={itemChangeHandler} required/>\r\n                <input type=\"number\" name=\"calories\" placeholder=\"Calories\" value={calories} onChange={caloriesChangeHandler} required/>\r\n            </div>\r\n            <button onClick={(event) => {\r\n                event.preventDefault();\r\n                props.addItem(itemName, calories);\r\n                }}>{'Add Item'}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateItem;","import './ItemsList.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Item = (props) => {\r\n    const item = props.item;\r\n    const [isInEditMode, setIsInEditMode] = useState(false);\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [calories, setCalories] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setItemName(item.name);\r\n        setCalories(item.calories);\r\n    }, [])\r\n\r\n    const itemChangeHandler = (event) => {\r\n        setItemName(event.target.value);\r\n    }\r\n\r\n    const caloriesChangeHandler = (event) => {\r\n        setCalories(event.target.value);\r\n    }\r\n\r\n    const handleEdit = () =>{\r\n        setIsInEditMode(!isInEditMode);\r\n    }\r\n\r\n    const handleDone = () => {\r\n        setIsInEditMode(!isInEditMode);\r\n        props.updateItem(item.name, itemName, calories);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Item\">\r\n            {isInEditMode ? (\r\n            <div className=\"input-header\">\r\n               <input type=\"text\" name=\"item\" placeholder=\"Item name\" value={itemName} onChange={itemChangeHandler} required/>\r\n                <input type=\"number\" name=\"calories\" placeholder=\"Calories\" value={calories} onChange={caloriesChangeHandler} required/>\r\n            </div>\r\n            ) : (\r\n                <div className=\"text-header\">\r\n                    <h5>{item.name}</h5>\r\n                <p>{`You have consumed ${item.calories} calories`}</p>\r\n                </div>\r\n                )}\r\n            <div className=\"actions\">\r\n                \r\n                {isInEditMode ? <button className=\"done-button\" onClick={handleDone}>{'Save Item'}</button> : <button className=\"edit-button\" onClick={handleEdit}>{'Edit Item'}</button>}\r\n                <button className=\"delete-button\" onClick={()=>{props.deleteItem(item.name);}}>{'Delete Item'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ItemsList = (props) => {\r\n    const items = props.items;\r\n\r\n    return (\r\n        <div className=\"ItemsList\">\r\n            {\r\n                items.length !== 0 ? \r\n                items.map((item) => <Item key={item.name} item={item} updateItem={props.updateItem} deleteItem={props.deleteItem}/>)\r\n                : 'Start adding items'\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemsList;","import './App.css';\nimport CreateItem from './CreateItem';\nimport ItemsList from './ItemsList';\nimport {useState} from 'react';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n    \n    const addItem = (name, calories) => {\n        setItems([...items, {name: name, calories: calories}]);\n    }\n\n    const updateItem = (prevName, newName, calories) => {\n        const index = items.findIndex((item) => item.name === prevName);\n        items[index].name = newName;\n        items[index].calories = calories;\n        setItems(items);\n    }\n\n    const deleteItem = (name) => {\n        setItems(items.filter((item) => item.name !== name));\n    }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n        <CreateItem addItem={addItem}/>\n        <ItemsList items={items} updateItem={updateItem} deleteItem={deleteItem}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}